#ifndef SHIELD_COMMON_H
#define SHIELD_COMMON_H

#include "shield-settings.glh"

in vec2 worldPos_v;
in vec2 screenPos_v;
in float angle_v;

const float M_INNER = 5.0;
const float M_OUTER = 30.0;
const float PI = 3.141592653589793;

float modulateRotation(float rot)
{
	return rot - floor(rot / (2.0 * PI)) * 2.0 * PI;
}

float rotationDifference(float a, float b)
{
	return modulateRotation(a - b + PI) - PI;
}

float getShieldIntensity()
{
	float distParam = distance(centerWorld, worldPos_v) / radius;
	
	float d = clamp((distParam > 1.0) ? (M_OUTER * (1.0 - distParam) + 1.0) : (1.0 - M_INNER * (1.0 - distParam)), 0.0, 1.0);
	
	float distToRippleCenter = abs(rotationDifference(angle_v, rippleCenter));
	float r = 0.5 * rippleIntensity * (sin(clamp(rippleIntensity * (distToRippleCenter - rippleDistance), -PI, PI) + PI / 2.0) + 1.0) + 1.0;
	
	return d * r * intensity;
}

#endif
